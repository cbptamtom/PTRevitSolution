<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="BtnStyle" TargetType="RadioButton">

        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,5,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">

                    <Border
                        x:Name="border"
                        Width="228"
                        Height="50"
                        BorderThickness="0">

                        <!--<Border.Background>
                        <SolidColorBrush x:Name="BorderBackground" Color="#c8f082" />
                        </Border.Background>-->

                        <Grid>

                            <Border
                                x:Name="Indicator"
                                Width="4"
                                Height="35"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="Black"
                                CornerRadius="2"
                                Visibility="Collapsed" />

                            <ContentPresenter />

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible" />

                        </Trigger>

                        <EventTrigger RoutedEvent="Border.MouseEnter" SourceName="border">

                            <!--<BeginStoryboard>
                            <Storyboard>
                            <ColorAnimation
                            Storyboard.TargetName="BorderBackground"
                            Storyboard.TargetProperty="Color"
                            From="#c8f082"
                            To="#e4fcbe"
                            Duration="0:0:0.3" />
                            </Storyboard>
                            </BeginStoryboard>-->

                        </EventTrigger>

                        <EventTrigger RoutedEvent="Border.MouseLeave" SourceName="border">

                            <!--<BeginStoryboard>
                            <Storyboard>
                            <ColorAnimation
                            Storyboard.TargetName="BorderBackground"
                            Storyboard.TargetProperty="Color"
                            From="#e4fcbe"
                            To="#89c925"
                            Duration="0:0:0.3" />
                            </Storyboard>
                            </BeginStoryboard>-->

                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">

                            <Setter TargetName="border" Property="Background" Value="#FFBFD3C1" />

                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <ImageBrush
        x:Key="close_app_def"
        ImageSource="/PrismRevitProject;component/Images/icons8-close-32.png"
        Stretch="None" />

    <ImageBrush
        x:Key="close_app_mo"
        ImageSource="/PrismRevitProject;component/Images/icons8-close-32-action.png"
        Stretch="None" />

    <Style x:Key="ExitApp" TargetType="{x:Type Button}">

        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="40" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0,15,15,0" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        x:Name="border"
                        Background="{StaticResource close_app_def}"
                        BorderThickness="0" />

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="border" Property="Background" Value="{StaticResource close_app_mo}" />

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">

                            <Setter TargetName="border" Property="Background" Value="{StaticResource close_app_mo}" />

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>


    <Style x:Key="PrimaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Green" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5" />
        <!--  Đặt giá trị CornerRadius tại đây  -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#009688" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#005A52" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <!--<Setter Property="Background" Value="Lavender" />-->
        <Setter Property="Background" Value="#85aff2" />
        <!--<Setter Property="Foreground" Value="White" />-->
        <Setter Property="FontSize" Value="14" />
        <!--<Setter Property="SnapsToDevicePixels" Value="True" />-->
        <Setter Property="Margin" Value="4" />
        <Setter Property="Width" Value="42" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <Grid>
                            <ContentPresenter
                                Margin="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F3FDE8" />
                            <!--  Primary Color: Light Blue  -->
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="Black" />
                                        <GradientStop Offset="1" Color="#FF3D55DC" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <!--  Dark Blue  -->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#4CAF50" />
                            <!--  Green  -->
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <!--  White  -->
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#F0F0F0" />
                            <!--  Light Gray  -->
                            <Setter Property="Foreground" Value="#A0A0A0" />
                            <!--  Gray  -->
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonApplyStyle" TargetType="{x:Type Button}">
        <!--<Setter Property="Background" Value="Lavender" />-->
        <Setter Property="Background" Value="#89c925" />

        <!--<Setter Property="Foreground" Value="White" />-->
        <Setter Property="FontSize" Value="14" />
        <!--<Setter Property="SnapsToDevicePixels" Value="True" />-->
        <Setter Property="Margin" Value="4" />
        <Setter Property="Width" Value="42" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <Grid>
                            <ContentPresenter
                                Margin="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightPink" />
                            <Setter Property="Foreground" Value="DarkBlue" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#8cc63e" />
                            <Setter Property="Foreground" Value="DarkRed" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Gainsboro" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="{Binding DataContext.Languages.GeneralLanguage.Apply, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=Window}}" />
    </Style>

    <Style x:Key="ButtonModifyStyle" TargetType="{x:Type Button}">
        <!--<Setter Property="Background" Value="Lavender" />-->
        <Setter Property="Background" Value="#85aff2" />
        <!--<Setter Property="Foreground" Value="White" />-->
        <Setter Property="FontSize" Value="14" />
        <!--<Setter Property="SnapsToDevicePixels" Value="True" />-->
        <Setter Property="Margin" Value="4" />
        <Setter Property="Width" Value="42" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <Grid>
                            <ContentPresenter
                                Margin="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightPink" />
                            <Setter Property="Foreground" Value="DarkBlue" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#8cc63e" />
                            <Setter Property="Foreground" Value="DarkRed" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Gainsboro" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="{Binding DataContext.Languages.GeneralLanguage.Modify, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=Window}}" />
    </Style>
    <Style x:Key="ButtonAddLayerStyle" TargetType="{x:Type Button}">
        <!--<Setter Property="Background" Value="Lavender" />-->
        <Setter Property="Background" Value="#85aff2" />
        <!--<Setter Property="Foreground" Value="White" />-->
        <Setter Property="FontSize" Value="14" />
        <!--<Setter Property="SnapsToDevicePixels" Value="True" />-->
        <Setter Property="Margin" Value="4" />
        <Setter Property="Width" Value="42" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <Grid>
                            <ContentPresenter
                                Margin="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightPink" />
                            <Setter Property="Foreground" Value="DarkBlue" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#8cc63e" />
                            <Setter Property="Foreground" Value="DarkRed" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Gainsboro" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="{Binding DataContext.Languages.GeneralLanguage.AddLayer, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=Window}}" />
    </Style>
    <Style x:Key="ButtonDeleteLayerStyle" TargetType="{x:Type Button}">
        <!--<Setter Property="Background" Value="Lavender" />-->
        <Setter Property="Background" Value="#85aff2" />
        <!--<Setter Property="Foreground" Value="White" />-->
        <Setter Property="FontSize" Value="14" />
        <!--<Setter Property="SnapsToDevicePixels" Value="True" />-->
        <Setter Property="Margin" Value="4" />
        <Setter Property="Width" Value="42" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="4">
                        <Grid>
                            <ContentPresenter
                                Margin="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightPink" />
                            <Setter Property="Foreground" Value="DarkBlue" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#8cc63e" />
                            <Setter Property="Foreground" Value="DarkRed" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Gainsboro" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="{Binding DataContext.Languages.GeneralLanguage.DeleteLayer, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=Window}}" />
    </Style>
</ResourceDictionary>